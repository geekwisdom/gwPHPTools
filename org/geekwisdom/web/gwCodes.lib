<?php
include_once("gwRandCode.lib");
class gwCodes 
{ 
 private $codearray=Array();
 private $file_name="";
 private $file_path="";
 private $ext_suffix;
 public function make_code($JSONstring)
 {
 //given a json string return a code that contains the filename
 //that contains the data for that string
 $newcode=array_pop($this->codearray);
 $fname=$this->file_path . "/" . $newcode . $this->ext_suffix;
 file_put_contents($fname,$JSONstring);
 if (count($newcode) < 2) self::build_codes(100); // get new set of codes
 else file_put_contents($this->file_path . "/" . $this->file_name,json_encode($this->codearray));
 return $newcode;
 }
 
 public function consume_code($the_code)
 {
  //given a code, return the contents of the_code flie (json string)
  //optionally deleting the file if it has a cosumable flag set
 $file=$this->file_path . "/" . $the_code . $this->ext_suffix;
  if (!(file_exists($file))) return Array();
 else 
 {
  $nfo = file_get_contents($file);
  $j=json_decode($nfo,true);
  if(count($j) ==0) return $nfo;
  if ( array_key_exists("consumable",$j)) 
       {
       print_r($j);     
  $consume_it=$j["consumable"];
      if ($consume_it==1) unlink($file);
       }
 }
 return $j;

 }

 private function build_codes($total_codes=100)
  {
  //build an array of new codes (100?) that do not already have
  //files created.
  //if 'codes.array' already exists read it into array
  //otherwise create a new array set and write to codes.array
   $n=new gwRandCodes('',5);
   $i=0;
   $done=($i >= $total_codes);
   while (!($done))
   {
   $e=$n->encode($i);
   if (!(file_exists($this->file_path . "/" . $e . $this->ext_suffix)))
     {
	$i++;
	array_push($this->codearray,$e);
     }

   $done=($i >= $total_codes);
  }
  file_put_contents($this->file_path . "/" . $this->file_name,json_encode($this->codearray));
  }

public function __construct($fname="codes.array",$ext=".code")
 {
 $this->file_name=basename($fname);
 $this->file_path=dirname($fname);
 $this->ext_suffix=$ext;
 $a=$this->codearray;
 
if (!file_exists($fname)) self::build_codes(100);
else $this->codearray=json_decode(file_get_contents($fname),true);
 

 }

}
?>
